// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
        
    DMux8Way(in=load, sel=address, a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7);
    
    Register (load=reg0, in=in, out=regout0);
    Register (load=reg1, in=in, out=regout1);
    Register (load=reg2, in=in, out=regout2);
    Register (load=reg3, in=in, out=regout3);
    Register (load=reg4, in=in, out=regout4);
    Register (load=reg5, in=in, out=regout5);
    Register (load=reg6, in=in, out=regout6);
    Register (load=reg7, in=in, out=regout7);

    Mux8Way16(a=regout0, b=regout1, c=regout2, d=regout3, e=regout4, f=regout5, g=regout6, h=regout7, sel=address, out=out); 
}
